{"version":3,"sources":["config.js","actions/userActions.js","components/Login.js","actions/types.js","components/Header.js","actions/taskActions.js","components/Task.js","components/TaskList.js","components/Board.js","components/Content.js","reducers/taskReducer.js","reducers/userReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase","initializeApp","Wrapper","styled","div","_templateObject","Button","button","_templateObject2","ProfilePic","img","_templateObject3","Login","this","props","authInit","click","isLoggedIn","logOut","logIn","legend","picture","react_default","a","createElement","src","onClick","Component","connect","state","username","user","name","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","provider","currentUser","wrap","_context","prev","next","firebaseAuth","auth","GoogleAuthProvider","signInWithPopup","sent","displayName","email","photoURL","id","uid","type","payload","objectSpread","stop","_x","apply","arguments","_ref2","_callee2","_context2","signOut","_x2","_ref3","_callee3","_context3","onAuthStateChanged","_x3","Header_templateObject","Title","h1","Header_templateObject2","Header","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","title","Header_Wrapper","components_Login","handleLogIn","handleLogOut","isUserSignedIn","Task_templateObject","li","Task_templateObject2","Task","handleClick","bind","assertThisInitialized","e","handleChangeState","buttons","Task_Button","Task_Wrapper","boardType","React","TaskList","items","map","x","components_Task","key","handleRemove","Board_templateObject","Tasks","ul","Board_templateObject2","NewTask","input","Board_templateObject3","_templateObject4","Form","form","_templateObject5","Search","_templateObject6","Board","boardTitle","Number","newTask","search","handleInput","handleSubmit","handleSearch","preventDefault","task","setState","addTask","target","value","taskId","deleteTask","tasks","find","changeState","toLowerCase","getTasks","userId","_this2","filter","includes","newTaskForm","onSubmit","onChange","placeholder","noTaskFound","Board_Wrapper","Board_Title","length","components_TaskList","lastUpdatedItemId","firebaseFirestore","firestore","collection","where","orderBy","onSnapshot","snapshot","docChanges","forEach","change","doc","data","push","add","body","timestamp","Date","then","res","update","delete","Content_templateObject","Card","Content_templateObject2","Content","boards","Content_Wrapper","components_Board","requestLogin","propTypes","initialState","combineReducers","undefined","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","trace","App","es","Header_Header","components_Content","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8ece7b31.chunk.js","sourcesContent":["const config = {\n  apiKey: \"AIzaSyB2yCyUNY6rbVV_8iVJI_hJnaBhvivrvAY\",\n  authDomain: \"todo-board-cad1d.firebaseapp.com\",\n  databaseURL: \"https://todo-board-cad1d.firebaseio.com\",\n  projectId: \"todo-board-cad1d\",\n  storageBucket: \"todo-board-cad1d.appspot.com\",\n  messagingSenderId: \"598932242116\"\n};\n\nexport default config;\n","import { LOG_IN, LOG_OUT, AUTH_INIT } from \"./types\";\nimport firebaseAuth from \"firebase/firebase-auth\";\nimport firebase from \"firebase/firebase\";\nimport config from \"../config\";\n\nfirebase.initializeApp(config);\n\nexport const logIn = () => async dispatch => {\n  let provider = new firebaseAuth.auth.GoogleAuthProvider();\n  await firebaseAuth.auth().signInWithPopup(provider);\n\n  const currentUser = await firebaseAuth.auth().currentUser;\n\n  const user = {\n    name: currentUser.displayName,\n    email: currentUser.email,\n    picture: currentUser.photoURL,\n    id: currentUser.uid,\n    isLoggedIn: true\n  };\n\n  dispatch({\n    type: LOG_IN,\n    payload: { ...user }\n  });\n};\n\nexport const logOut = () => async dispatch => {\n  await firebaseAuth.auth().signOut();\n\n  dispatch({\n    type: LOG_OUT,\n    payload: { id: \"\", name: \"\", email: \"\", picture: \"\", isLoggedIn: false }\n  });\n};\n\nexport const authInit = () => async dispatch => {\n  await firebaseAuth.auth().onAuthStateChanged(currentUser => {\n    let user = {\n      name: currentUser.displayName,\n      email: currentUser.email,\n      picture: currentUser.photoURL,\n      id: currentUser.uid,\n      isLoggedIn: true\n    };\n\n    dispatch({\n      type: AUTH_INIT,\n      payload: { ...user }\n    });\n  });\n};\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logIn, logOut, authInit } from \"../actions/userActions\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 15px;\n`;\n\nconst Button = styled.button`\n  margin: 5px;\n  height: 30px;\n  width: 80px;\n  font-weight: 500;\n  font-size: 14px;\n  border: none;\n  background-color: transparent;\n  transition: transform 0.2s;\n  outline: none;\n\n  &:hover {\n    background-color: #f7f8f9;\n    border-radius: 4px;\n  }\n`;\n\nconst ProfilePic = styled.img`\n  border-radius: 50%;\n  max-width: 40px;\n  border: 1px solid;\n  boder-color: #dbe4ee;\n  margin: 5px;\n\n  &:hover {\n    box-shadow: 0 2px 6px 0 hsla(0, 0%, 0%, 0.2);\n  }\n`;\n\nclass Login extends Component {\n  componentDidMount() {\n    this.props.authInit();\n  }\n\n  render() {\n    const click = this.props.isLoggedIn ? this.props.logOut : this.props.logIn;\n    const legend = this.props.isLoggedIn ? \"Log Out\" : \"Log In\";\n    const picture = this.props.picture || \"./images/profile_placeholder.png\";\n    return (\n      <Wrapper>\n        <ProfilePic src={picture} />\n        <Button onClick={click}>{legend}</Button>\n      </Wrapper>\n    );\n  }\n}\n\nLogin.propTypes = {\n  logIn: PropTypes.func.isRequired,\n  logOut: PropTypes.func.isRequired,\n  authInit: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  username: state.user.name,\n  picture: state.user.picture,\n  isLoggedIn: state.user.isLoggedIn\n});\n\nexport default connect(\n  mapStateToProps,\n  { logIn, logOut, authInit }\n)(Login);\n","// Task types\nexport const GET_TASKS = \"GET_TASKS\";\nexport const ADD_TASK = \"ADD_TASK\";\nexport const CHANGE_STATE = \"CHANGE_STATE\";\nexport const DELETE_TASK = \"DELETE_TASK\";\nexport const SEARCH_TASK = \"SEARCH_TASK\";\n\n// User types\nexport const LOG_IN = \"LOG_IN\";\nexport const LOG_OUT = \"LOG_OUT\";\nexport const AUTH_INIT = \"AUTH_INIT\";\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Login from \"./Login.js\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Title = styled.h1`\n  font-family: Impact, Haettenschweiler, \"Arial Narrow Bold\", sans-serif;\n  padding: 20px;\n`;\n\nexport default class Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: \"To-do Board\"\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const state = this.state;\n    return (\n      <Wrapper>\n        <Title>{state.title}</Title>\n        <Login\n          user={state.user}\n          logIn={this.handleLogIn}\n          logOut={this.handleLogOut}\n          isUserSignedIn={this.isUserSignedIn}\n        />\n      </Wrapper>\n    );\n  }\n}\n","import { GET_TASKS, ADD_TASK, CHANGE_STATE, DELETE_TASK } from \"./types\";\nimport firebaseFirestore from \"firebase/firebase-firestore\";\nimport firebase from \"firebase/firebase\";\nimport config from \"../config\";\n\nfirebase.initializeApp(config);\n\nexport const getTasks = userId => dispatch => {\n  let tasks = [];\n\n  let query = firebaseFirestore\n    .firestore()\n    .collection(\"tasks\")\n    .where(\"userId\", \"==\", userId)\n    .orderBy(\"timestamp\", \"asc\");\n\n  query.onSnapshot(snapshot => {\n    snapshot.docChanges().forEach(change => {\n      if (!(change.type === \"removed\" || change.type === \"modified\")) {\n        let task = { ...change.doc.data(), id: change.doc.id };\n        tasks.push(task);\n      }\n    });\n\n    dispatch({\n      type: GET_TASKS,\n      payload: tasks\n    });\n  });\n};\n\nexport const addTask = task => async dispatch => {\n  await firebaseFirestore\n    .firestore()\n    .collection(\"tasks\")\n    .add({\n      userId: firebaseFirestore.auth().currentUser.uid,\n      title: task.title,\n      body: \"\",\n      timestamp: new Date(),\n      state: task.state\n    })\n    .then(res => {\n      dispatch({\n        type: ADD_TASK,\n        payload: res.id\n      });\n    });\n};\n\nexport const deleteTask = taskId => async dispatch => {\n  await firebaseFirestore\n    .firestore()\n    .collection(\"tasks\")\n    .doc(taskId)\n    .delete()\n    .then(() => {\n      dispatch({ type: DELETE_TASK, payload: taskId });\n    });\n};\n\nexport const changeState = task => async dispatch => {\n  await firebaseFirestore\n    .firestore()\n    .collection(\"tasks\")\n    .doc(task.id)\n    .update({ state: task.state })\n    .then(() => {\n      dispatch({\n        type: CHANGE_STATE,\n        payload: task.id\n      });\n    });\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = styled.button`\n  border: none;\n  border-radius: 2px;\n  transition-duration: 0.4s;\n  margin: 0;\n  padding: 0;\n  display: none;\n  height: 18px;\n  width: 18px;\n  background-color: transparent;\n\n  &:hover {\n    background-color: ${props =>\n      props.name === \"changeState\" ? \"#4caf50\" : \"#c42952\"};\n    color: white;\n  }\n`;\n\nconst Wrapper = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 4px;\n\n  &:hover {\n    background-color: #ecf5fc;\n    button {\n      display: inline;\n    }\n  }\n`;\n\nclass Task extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    this.props.handleChangeState(this.props.id);\n  }\n\n  render() {\n    const props = this.props;\n    const buttons = (\n      <div>\n        <Button name=\"changeState\" onClick={this.handleClick}>\n          ✓\n        </Button>\n      </div>\n    );\n    return (\n      <Wrapper id={props.id}>\n        <label>{props.title}</label>\n        {props.boardType !== 2 ? buttons : \"\"}\n      </Wrapper>\n    );\n  }\n}\n\nexport default Task;\n","import React from \"react\";\nimport Task from \"./Task\";\n\nfunction TaskList(props) {\n  return (\n    <div>\n      {props.items.map(x => (\n        <Task\n          key={x.id}\n          id={x.id}\n          title={x.title}\n          boardType={props.boardType}\n          handleChangeState={props.handleChangeState}\n          handleRemove={props.handleRemove}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default TaskList;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  getTasks,\n  addTask,\n  changeState,\n  deleteTask\n} from \"../actions/taskActions\";\nimport styled from \"styled-components\";\nimport TaskList from \"./TaskList\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 30%;\n  border-radius: 4px;\n  box-shadow: 0 2px 6px 0 hsla(0, 0%, 0%, 0.2);\n  padding: 10px;\n`;\n\nconst Tasks = styled.ul`\n  margin: 0px;\n  padding: 0px;\n  width: 95%;\n  list-style-type: circle;\n`;\n\nconst NewTask = styled.input`\n  border-radius: 4px;\n  background-color: #f3f4f6;\n  margin: 10px -10px 10px -10px;\n  width: 100%;\n  border: none;\n  padding: 10px;\n  outline: none;\n`;\n\nconst Title = styled.div`\n  width: 95%;\n  padding: 10px;\n`;\n\nconst Form = styled.form`\n  margin: 0;\n  padding: 0;\n  width: 90%;\n`;\n\nconst Search = styled.input`\n  border-radius: inherit;\n  background-color: #f3f4f6;\n  width: 90%;\n  border: none;\n  padding: 10px;\n  margin: 10px 0 10px 0;\n  outline: none;\n`;\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      boardTitle: props.boardTitle,\n      boardType: Number(props.boardType),\n      newTask: {\n        title: \"\",\n        state: 0\n      },\n      search: \"\"\n    };\n\n    this.handleInput = this.handleInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.handleChangeState = this.handleChangeState.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    let task = this.state.newTask;\n    this.setState({\n      newTask: { title: \"\", state: 0 }\n    });\n\n    this.props.addTask(task);\n  }\n\n  handleInput(e) {\n    this.setState({ newTask: { title: e.target.value, state: 0 } });\n  }\n\n  handleRemove(taskId) {\n    this.props.deleteTask(taskId);\n  }\n\n  handleChangeState(taskId) {\n    let task = this.props.tasks.find(x => x.id === taskId);\n\n    if (task.state < 2) task.state += 1;\n\n    this.props.changeState(task);\n  }\n\n  handleSearch(e) {\n    this.setState({ search: e.target.value.toLowerCase() });\n  }\n\n  componentDidMount() {\n    this.props.getTasks(this.props.userId);\n  }\n\n  render() {\n    const tasks = this.props.tasks.filter(x => {\n      return (\n        x.state === this.state.boardType &&\n        x.title.toLowerCase().includes(this.state.search)\n      );\n    });\n\n    const newTaskForm = (\n      <Form onSubmit={this.handleSubmit}>\n        <NewTask\n          type=\"text\"\n          onChange={this.handleInput}\n          placeholder=\"New task\"\n          value={this.state.newTask.title}\n        />\n      </Form>\n    );\n\n    const noTaskFound = <small>No tasks found.</small>;\n\n    return (\n      <Wrapper>\n        <Title>{this.state.boardTitle}</Title>\n        <Search type=\"text\" placeholder=\"Search\" onChange={this.handleSearch} />\n        <Tasks>\n          {tasks.length === 0 ? (\n            noTaskFound\n          ) : (\n            <TaskList\n              items={tasks}\n              handleChangeState={this.handleChangeState}\n              boardType={this.state.boardType}\n            />\n          )}\n        </Tasks>\n        {this.state.boardType === 0 ? newTaskForm : \"\"}\n      </Wrapper>\n    );\n  }\n}\n\nBoard.propTypes = {\n  getTasks: PropTypes.func.isRequired,\n  addTask: PropTypes.func.isRequired,\n  changeState: PropTypes.func.isRequired,\n  deleteTask: PropTypes.func.isRequired,\n  tasks: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  tasks: state.tasks.items,\n  lastUpdatedItemId: state.tasks.lastUpdatedItemId,\n  userId: state.user.id\n});\n\nexport default connect(\n  mapStateToProps,\n  { getTasks, addTask, changeState, deleteTask }\n)(Board);\n","import React from \"react\";\nimport Board from \"./Board.js\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 10px;\n  padding: 5px;\n`;\n\nconst Card = styled.div`\n  font-size: 24px;\n  font-weight: 500;\n  width: 30%;\n  border: 1px solid;\n  border-radius: 4px;\n  box-shadow: 0 2px 6px 0 hsla(0, 0%, 0%, 0.2);\n  padding: 15px;\n`;\n\nfunction Content(props) {\n  const boards = (\n    <Wrapper>\n      <Board boardType=\"0\" boardTitle=\"Backlog\" />\n      <Board boardType=\"1\" boardTitle=\"In Progress\" />\n      <Board boardType=\"2\" boardTitle=\"Done\" />\n    </Wrapper>\n  );\n\n  const requestLogin = (\n    <Wrapper>\n      <Card>Necesita estar logueado para poder utilizar esta herramienta.</Card>\n    </Wrapper>\n  );\n\n  return props.isLoggedIn ? boards : requestLogin;\n}\n\nContent.propTypes = {};\n\nconst mapStateToProps = state => ({\n  isLoggedIn: state.user.isLoggedIn\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(Content);\n","import {\n  GET_TASKS,\n  ADD_TASK,\n  CHANGE_STATE,\n  DELETE_TASK,\n  SEARCH_TASK\n} from \"../actions/types\";\n\nconst initialState = {\n  items: [],\n  lastUpdatedItemId: \"\"\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_TASKS:\n      return { items: action.payload, lastUpdatedItemId: \"\" };\n    case ADD_TASK:\n      return { ...state, lastUpdatedItemId: action.payload };\n    case CHANGE_STATE:\n      return { ...state, lastUpdatedItemId: action.payload };\n    case DELETE_TASK:\n      return { ...state, lastUpdatedItemId: action.payload };\n    case SEARCH_TASK:\n      return { ...state, items: action.payload };\n    default:\n      return state;\n  }\n}\n","import { LOG_IN, LOG_OUT, AUTH_INIT } from \"../actions/types\";\n\nconst initialState = {\n  name: \"\",\n  id: \"\",\n  email: \"\",\n  picture: \"../images/profile_placeholder.png\",\n  isLoggedIn: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case LOG_IN:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case LOG_OUT:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case AUTH_INIT:\n      return {\n        ...state,\n        ...action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport taskReducer from \"./taskReducer\";\nimport userReducer from \"./userReducer\";\n\nexport default combineReducers({\n  tasks: taskReducer,\n  user: userReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/index\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ &&\n      window.__REDUX_DEVTOOLS_EXTENSION__({\n        trace: true\n      })\n  )\n);\n\nexport default store;\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport Content from \"./components/Content\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Header />\n        <Content />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}