{"version":3,"sources":["config.js","actions/userActions.js","components/Login.js","actions/types.js","components/Header.js","actions/taskActions.js","components/Task.js","components/TaskList.js","components/Board.js","components/Content.js","reducers/taskReducer.js","reducers/userReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase","initializeApp","Wrapper","styled","div","_templateObject","Button","button","_templateObject2","ProfilePic","img","_templateObject3","Login","this","props","authInit","click","isLoggedIn","logOut","logIn","legend","picture","react_default","a","createElement","src","onClick","Component","connect","state","username","user","name","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","provider","currentUser","wrap","_context","prev","next","auth","GoogleAuthProvider","signInWithPopup","sent","displayName","email","photoURL","id","uid","type","payload","objectSpread","stop","_x","apply","arguments","_ref2","_callee2","_context2","signOut","_x2","_ref3","_callee3","_context3","onAuthStateChanged","_x3","Header_templateObject","Title","h1","Header_templateObject2","Header","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","title","Header_Wrapper","components_Login","handleLogIn","handleLogOut","isUserSignedIn","Task_templateObject","li","Task_templateObject2","Task","handleClick","bind","assertThisInitialized","e","handleChangeState","buttons","Task_Button","Task_Wrapper","boardType","React","TaskList","items","map","x","components_Task","key","handleRemove","Board_templateObject","Tasks","ul","Board_templateObject2","NewTask","input","Board_templateObject3","_templateObject4","Form","form","_templateObject5","Search","_templateObject6","Board","boardTitle","Number","newTask","search","handleInput","handleSubmit","handleSearch","preventDefault","task","setState","addTask","target","value","taskId","deleteTask","tasks","find","changeState","toLowerCase","getTasks","userId","_this2","filter","includes","newTaskForm","onSubmit","onChange","placeholder","noTaskFound","Board_Wrapper","Board_Title","length","components_TaskList","lastUpdatedItemId","firestore","collection","where","orderBy","onSnapshot","snapshot","docChanges","forEach","change","doc","data","push","add","body","timestamp","Date","then","res","update","delete","Content_templateObject","Card","Content_templateObject2","Content","boards","Content_Wrapper","components_Board","requestLogin","propTypes","initialState","combineReducers","undefined","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","trace","App","es","Header_Header","components_Content","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.419ae4d7.chunk.js","sourcesContent":["const config = {\n  apiKey: \"AIzaSyB2yCyUNY6rbVV_8iVJI_hJnaBhvivrvAY\",\n  authDomain: \"todo-board-cad1d.firebaseapp.com\",\n  databaseURL: \"https://todo-board-cad1d.firebaseio.com\",\n  projectId: \"todo-board-cad1d\",\n  storageBucket: \"todo-board-cad1d.appspot.com\",\n  messagingSenderId: \"598932242116\"\n};\n\nexport default config;\n","import { LOG_IN, LOG_OUT, AUTH_INIT } from \"./types\";\nimport firebase from \"firebase/firebase\";\nimport config from \"../config\";\n\nfirebase.initializeApp(config);\n\nexport const logIn = () => async dispatch => {\n  let provider = new firebase.auth.GoogleAuthProvider();\n  await firebase.auth().signInWithPopup(provider);\n\n  const currentUser = await firebase.auth().currentUser;\n\n  const user = {\n    name: currentUser.displayName,\n    email: currentUser.email,\n    picture: currentUser.photoURL,\n    id: currentUser.uid,\n    isLoggedIn: true\n  };\n\n  dispatch({\n    type: LOG_IN,\n    payload: { ...user }\n  });\n};\n\nexport const logOut = () => async dispatch => {\n  await firebase.auth().signOut();\n\n  dispatch({\n    type: LOG_OUT,\n    payload: { id: \"\", name: \"\", email: \"\", picture: \"\", isLoggedIn: false }\n  });\n};\n\nexport const authInit = () => async dispatch => {\n  await firebase.auth().onAuthStateChanged(currentUser => {\n    let user = {\n      name: currentUser.displayName,\n      email: currentUser.email,\n      picture: currentUser.photoURL,\n      id: currentUser.uid,\n      isLoggedIn: true\n    };\n\n    dispatch({\n      type: AUTH_INIT,\n      payload: { ...user }\n    });\n  });\n};\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logIn, logOut, authInit } from \"../actions/userActions\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 15px;\n`;\n\nconst Button = styled.button`\n  margin: 5px;\n  height: 30px;\n  width: 80px;\n  font-weight: 500;\n  font-size: 14px;\n  border: none;\n  background-color: transparent;\n  transition: transform 0.2s;\n  outline: none;\n\n  &:hover {\n    background-color: #f7f8f9;\n    border-radius: 4px;\n  }\n`;\n\nconst ProfilePic = styled.img`\n  border-radius: 50%;\n  max-width: 40px;\n  border: 1px solid;\n  boder-color: #dbe4ee;\n  margin: 5px;\n\n  &:hover {\n    box-shadow: 0 2px 6px 0 hsla(0, 0%, 0%, 0.2);\n  }\n`;\n\nclass Login extends Component {\n  componentDidMount() {\n    this.props.authInit();\n  }\n\n  render() {\n    const click = this.props.isLoggedIn ? this.props.logOut : this.props.logIn;\n    const legend = this.props.isLoggedIn ? \"Log Out\" : \"Log In\";\n    const picture = this.props.picture || \"./images/profile_placeholder.png\";\n    return (\n      <Wrapper>\n        <ProfilePic src={picture} />\n        <Button onClick={click}>{legend}</Button>\n      </Wrapper>\n    );\n  }\n}\n\nLogin.propTypes = {\n  logIn: PropTypes.func.isRequired,\n  logOut: PropTypes.func.isRequired,\n  authInit: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  username: state.user.name,\n  picture: state.user.picture,\n  isLoggedIn: state.user.isLoggedIn\n});\n\nexport default connect(\n  mapStateToProps,\n  { logIn, logOut, authInit }\n)(Login);\n","// Task types\nexport const GET_TASKS = \"GET_TASKS\";\nexport const ADD_TASK = \"ADD_TASK\";\nexport const CHANGE_STATE = \"CHANGE_STATE\";\nexport const DELETE_TASK = \"DELETE_TASK\";\nexport const SEARCH_TASK = \"SEARCH_TASK\";\n\n// User types\nexport const LOG_IN = \"LOG_IN\";\nexport const LOG_OUT = \"LOG_OUT\";\nexport const AUTH_INIT = \"AUTH_INIT\";\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Login from \"./Login.js\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Title = styled.h1`\n  font-family: Impact, Haettenschweiler, \"Arial Narrow Bold\", sans-serif;\n  padding: 20px;\n`;\n\nexport default class Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: \"To-do Board\"\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const state = this.state;\n    return (\n      <Wrapper>\n        <Title>{state.title}</Title>\n        <Login\n          user={state.user}\n          logIn={this.handleLogIn}\n          logOut={this.handleLogOut}\n          isUserSignedIn={this.isUserSignedIn}\n        />\n      </Wrapper>\n    );\n  }\n}\n","import { GET_TASKS, ADD_TASK, CHANGE_STATE, DELETE_TASK } from \"./types\";\nimport firebase from \"firebase\";\nimport config from \"../config\";\n\nfirebase.initializeApp(config);\n\nexport const getTasks = userId => dispatch => {\n  let tasks = [];\n\n  let query = firebase\n    .firestore()\n    .collection(\"tasks\")\n    .where(\"userId\", \"==\", userId)\n    .orderBy(\"timestamp\", \"asc\");\n\n  query.onSnapshot(snapshot => {\n    snapshot.docChanges().forEach(change => {\n      if (!(change.type === \"removed\" || change.type === \"modified\")) {\n        let task = { ...change.doc.data(), id: change.doc.id };\n        tasks.push(task);\n      }\n    });\n\n    dispatch({\n      type: GET_TASKS,\n      payload: tasks\n    });\n  });\n};\n\nexport const addTask = task => async dispatch => {\n  await firebase\n    .firestore()\n    .collection(\"tasks\")\n    .add({\n      userId: firebase.auth().currentUser.uid,\n      title: task.title,\n      body: \"\",\n      timestamp: new Date(),\n      state: task.state\n    })\n    .then(res => {\n      dispatch({\n        type: ADD_TASK,\n        payload: res.id\n      });\n    });\n};\n\nexport const deleteTask = taskId => async dispatch => {\n  await firebase\n    .firestore()\n    .collection(\"tasks\")\n    .doc(taskId)\n    .delete()\n    .then(() => {\n      dispatch({ type: DELETE_TASK, payload: taskId });\n    });\n};\n\nexport const changeState = task => async dispatch => {\n  await firebase\n    .firestore()\n    .collection(\"tasks\")\n    .doc(task.id)\n    .update({ state: task.state })\n    .then(() => {\n      dispatch({\n        type: CHANGE_STATE,\n        payload: task.id\n      });\n    });\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = styled.button`\n  border: none;\n  border-radius: 2px;\n  transition-duration: 0.4s;\n  margin: 0;\n  padding: 0;\n  display: none;\n  height: 18px;\n  width: 18px;\n  background-color: transparent;\n\n  &:hover {\n    background-color: ${props =>\n      props.name === \"changeState\" ? \"#4caf50\" : \"#c42952\"};\n    color: white;\n  }\n`;\n\nconst Wrapper = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 4px;\n\n  &:hover {\n    background-color: #ecf5fc;\n    button {\n      display: inline;\n    }\n  }\n`;\n\nclass Task extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    this.props.handleChangeState(this.props.id);\n  }\n\n  render() {\n    const props = this.props;\n    const buttons = (\n      <div>\n        <Button name=\"changeState\" onClick={this.handleClick}>\n          ✓\n        </Button>\n      </div>\n    );\n    return (\n      <Wrapper id={props.id}>\n        <label>{props.title}</label>\n        {props.boardType !== 2 ? buttons : \"\"}\n      </Wrapper>\n    );\n  }\n}\n\nexport default Task;\n","import React from \"react\";\nimport Task from \"./Task\";\n\nfunction TaskList(props) {\n  return (\n    <div>\n      {props.items.map(x => (\n        <Task\n          key={x.id}\n          id={x.id}\n          title={x.title}\n          boardType={props.boardType}\n          handleChangeState={props.handleChangeState}\n          handleRemove={props.handleRemove}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default TaskList;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  getTasks,\n  addTask,\n  changeState,\n  deleteTask\n} from \"../actions/taskActions\";\nimport styled from \"styled-components\";\nimport TaskList from \"./TaskList\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 30%;\n  border-radius: 4px;\n  box-shadow: 0 2px 6px 0 hsla(0, 0%, 0%, 0.2);\n  padding: 10px;\n`;\n\nconst Tasks = styled.ul`\n  margin: 0px;\n  padding: 0px;\n  width: 95%;\n  list-style-type: circle;\n`;\n\nconst NewTask = styled.input`\n  border-radius: 4px;\n  background-color: #f3f4f6;\n  margin: 10px -10px 10px -10px;\n  width: 100%;\n  border: none;\n  padding: 10px;\n  outline: none;\n`;\n\nconst Title = styled.div`\n  width: 95%;\n  padding: 10px;\n`;\n\nconst Form = styled.form`\n  margin: 0;\n  padding: 0;\n  width: 90%;\n`;\n\nconst Search = styled.input`\n  border-radius: inherit;\n  background-color: #f3f4f6;\n  width: 90%;\n  border: none;\n  padding: 10px;\n  margin: 10px 0 10px 0;\n  outline: none;\n`;\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      boardTitle: props.boardTitle,\n      boardType: Number(props.boardType),\n      newTask: {\n        title: \"\",\n        state: 0\n      },\n      search: \"\"\n    };\n\n    this.handleInput = this.handleInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.handleChangeState = this.handleChangeState.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    let task = this.state.newTask;\n    this.setState({\n      newTask: { title: \"\", state: 0 }\n    });\n\n    this.props.addTask(task);\n  }\n\n  handleInput(e) {\n    this.setState({ newTask: { title: e.target.value, state: 0 } });\n  }\n\n  handleRemove(taskId) {\n    this.props.deleteTask(taskId);\n  }\n\n  handleChangeState(taskId) {\n    let task = this.props.tasks.find(x => x.id === taskId);\n\n    if (task.state < 2) task.state += 1;\n\n    this.props.changeState(task);\n  }\n\n  handleSearch(e) {\n    this.setState({ search: e.target.value.toLowerCase() });\n  }\n\n  componentDidMount() {\n    this.props.getTasks(this.props.userId);\n  }\n\n  render() {\n    const tasks = this.props.tasks.filter(x => {\n      return (\n        x.state === this.state.boardType &&\n        x.title.toLowerCase().includes(this.state.search)\n      );\n    });\n\n    const newTaskForm = (\n      <Form onSubmit={this.handleSubmit}>\n        <NewTask\n          type=\"text\"\n          onChange={this.handleInput}\n          placeholder=\"New task\"\n          value={this.state.newTask.title}\n        />\n      </Form>\n    );\n\n    const noTaskFound = <small>No tasks found.</small>;\n\n    return (\n      <Wrapper>\n        <Title>{this.state.boardTitle}</Title>\n        <Search type=\"text\" placeholder=\"Search\" onChange={this.handleSearch} />\n        <Tasks>\n          {tasks.length === 0 ? (\n            noTaskFound\n          ) : (\n            <TaskList\n              items={tasks}\n              handleChangeState={this.handleChangeState}\n              boardType={this.state.boardType}\n            />\n          )}\n        </Tasks>\n        {this.state.boardType === 0 ? newTaskForm : \"\"}\n      </Wrapper>\n    );\n  }\n}\n\nBoard.propTypes = {\n  getTasks: PropTypes.func.isRequired,\n  addTask: PropTypes.func.isRequired,\n  changeState: PropTypes.func.isRequired,\n  deleteTask: PropTypes.func.isRequired,\n  tasks: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  tasks: state.tasks.items,\n  lastUpdatedItemId: state.tasks.lastUpdatedItemId,\n  userId: state.user.id\n});\n\nexport default connect(\n  mapStateToProps,\n  { getTasks, addTask, changeState, deleteTask }\n)(Board);\n","import React from \"react\";\nimport Board from \"./Board.js\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 10px;\n  padding: 5px;\n`;\n\nconst Card = styled.div`\n  font-size: 24px;\n  font-weight: 500;\n  width: 30%;\n  border: 1px solid;\n  border-radius: 4px;\n  box-shadow: 0 2px 6px 0 hsla(0, 0%, 0%, 0.2);\n  padding: 15px;\n`;\n\nfunction Content(props) {\n  const boards = (\n    <Wrapper>\n      <Board boardType=\"0\" boardTitle=\"Backlog\" />\n      <Board boardType=\"1\" boardTitle=\"In Progress\" />\n      <Board boardType=\"2\" boardTitle=\"Done\" />\n    </Wrapper>\n  );\n\n  const requestLogin = (\n    <Wrapper>\n      <Card>Necesita estar logueado para poder utilizar esta herramienta.</Card>\n    </Wrapper>\n  );\n\n  return props.isLoggedIn ? boards : requestLogin;\n}\n\nContent.propTypes = {};\n\nconst mapStateToProps = state => ({\n  isLoggedIn: state.user.isLoggedIn\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(Content);\n","import {\n  GET_TASKS,\n  ADD_TASK,\n  CHANGE_STATE,\n  DELETE_TASK,\n  SEARCH_TASK\n} from \"../actions/types\";\n\nconst initialState = {\n  items: [],\n  lastUpdatedItemId: \"\"\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_TASKS:\n      return { items: action.payload, lastUpdatedItemId: \"\" };\n    case ADD_TASK:\n      return { ...state, lastUpdatedItemId: action.payload };\n    case CHANGE_STATE:\n      return { ...state, lastUpdatedItemId: action.payload };\n    case DELETE_TASK:\n      return { ...state, lastUpdatedItemId: action.payload };\n    case SEARCH_TASK:\n      return { ...state, items: action.payload };\n    default:\n      return state;\n  }\n}\n","import { LOG_IN, LOG_OUT, AUTH_INIT } from \"../actions/types\";\n\nconst initialState = {\n  name: \"\",\n  id: \"\",\n  email: \"\",\n  picture: \"../images/profile_placeholder.png\",\n  isLoggedIn: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case LOG_IN:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case LOG_OUT:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case AUTH_INIT:\n      return {\n        ...state,\n        ...action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport taskReducer from \"./taskReducer\";\nimport userReducer from \"./userReducer\";\n\nexport default combineReducers({\n  tasks: taskReducer,\n  user: userReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/index\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ &&\n      window.__REDUX_DEVTOOLS_EXTENSION__({\n        trace: true\n      })\n  )\n);\n\nexport default store;\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport Content from \"./components/Content\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Header />\n        <Content />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}